#!/usr/bin/env python3
"""
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ IP –∫–∞–º–µ—Ä (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è 25 FPS)
"""
import sys
import os
import asyncio
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent))

try:
    import uvicorn
    from app.main import app
    from app.config import settings
    from app.utils.logger import logger
except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: pip install -r requirements.txt")
    sys.exit(1)


def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"""
    logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å 25 FPS...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    required_dirs = ['static/css', 'static/js', 'templates', 'logs']
    for dir_path in required_dirs:
        Path(dir_path).mkdir(parents=True, exist_ok=True)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    env_file = Path('.env')
    if not env_file.exists():
        logger.warning("–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ .env —Ñ–∞–π–ª–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è 25 FPS
        example_env = """# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=postgresql://postgres:password@localhost:5432/camera_monitoring

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ RTSP –∫–∞–º–µ—Ä—ã (25 FPS)
RTSP_URL=rtsp://admin:password@192.168.1.100:554/stream

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
HOST=0.0.0.0
PORT=8000

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞–º–µ—Ä—ã - –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –¥–ª—è 25 FPS
CAMERA_WIDTH=1920
CAMERA_HEIGHT=1080
CAMERA_FPS=25

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è 25 FPS)
ANALYSIS_INTERVAL=1.0
MAX_DETECTION_RESULTS=50

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∂–∞—Ç–∏—è –≤–∏–¥–µ–æ
JPEG_QUALITY=80

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è 25 FPS
FRAME_SKIP_COUNT=25
BUFFER_SIZE=2

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_LEVEL=INFO
LOG_FILE=logs/camera_monitoring.log
"""
        
        with open('.env.example', 'w', encoding='utf-8') as f:
            f.write(example_env)
        
        logger.info("–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.example —Å –ø—Ä–∏–º–µ—Ä–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è 25 FPS")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è 25 FPS
    if settings.camera_fps != 25:
        logger.warning(f"–ö–∞–º–µ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ {settings.camera_fps} FPS, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 25 FPS")
    
    if settings.analysis_interval < 1.0:
        logger.warning(f"–ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–Ω–∞–ª–∏–∑–∞ {settings.analysis_interval}—Å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–º –¥–ª—è 25 FPS")
    
    logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


def print_system_info():
    """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ"""
    print("üé• –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ IP –∫–∞–º–µ—Ä (25 FPS)")
    print("=" * 60)
    print(f"üìÖ –î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: RiddlerXenon")
    print(f"üêç Python: {sys.version.split()[0]}")
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print("=" * 60)


def print_configuration():
    """–í—ã–≤–æ–¥ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã"""
    config = settings.get_camera_config()
    neural_config = settings.get_neural_config()
    
    print("\n‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã:")
    print(f"üåê –°–µ—Ä–≤–µ—Ä: {settings.host}:{settings.port}")
    print(f"üìπ RTSP: {settings.rtsp_url}")
    print(f"üóÉÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {settings.database_url.split('@')[-1] if '@' in settings.database_url else '–ª–æ–∫–∞–ª—å–Ω–∞—è'}")
    print(f"üìè –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {config['width']}x{config['height']}")
    print(f"üé¨ FPS: {config['fps']}")
    print(f"üîç –ê–Ω–∞–ª–∏–∑: –∫–∞–∂–¥—ã–µ {neural_config['analysis_interval']}—Å")
    print(f"üìä –ë—É—Ñ–µ—Ä: {config['buffer_size']} –∫–∞–¥—Ä–∞")
    print(f"üóúÔ∏è  –ö–∞—á–µ—Å—Ç–≤–æ JPEG: {config['jpeg_quality']}%")


def print_performance_tips():
    """–í—ã–≤–æ–¥ —Å–æ–≤–µ—Ç–æ–≤ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è 25 FPS"""
    print("\nüí° –°–æ–≤–µ—Ç—ã –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è 25 FPS:")
    print("‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
    print("‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 4 –ì–ë RAM –∏ 2-—è–¥–µ—Ä–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä")
    print("‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω–æ–µ —Å–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è RTSP –ø–æ—Ç–æ–∫–∞")
    print("‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
    print("‚Ä¢ –ü—Ä–∏ –Ω–∏–∑–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É–≤–µ–ª–∏—á—å—Ç–µ ANALYSIS_INTERVAL")
    print("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ SSD –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        print_system_info()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        check_environment()
        
        # –í—ã–≤–æ–¥ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print_configuration()
        
        # –°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        print_performance_tips()
        
        print(f"\nüöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
        print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("=" * 60)
        
        # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è 25 FPS
        uvicorn.run(
            "app.main:app",
            host=settings.host,
            port=settings.port,
            reload=True,
            log_level="info",
            access_log=True,
            reload_dirs=["app", "static", "templates"],
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏
            workers=1,  # –û–¥–∏–Ω –≤–æ—Ä–∫–µ—Ä –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ 25 FPS
            loop="asyncio",  # –£–∫–∞–∑–∞–Ω–∏–µ event loop
            http="httptools",  # –ë—ã—Å—Ç—Ä—ã–π HTTP –ø–∞—Ä—Å–µ—Ä
            lifespan="on"  # –í–∫–ª—é—á–µ–Ω–∏–µ lifespan events
        )
        
    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        print("–§–∞–π–ª –ª–æ–≥–æ–≤: logs/camera_monitoring.log")
        sys.exit(1)
    finally:
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–∞–Ω—Å–∞:")
        print(f"‚è±Ô∏è  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ IP –∫–∞–º–µ—Ä!")


if __name__ == "__main__":
    main()
